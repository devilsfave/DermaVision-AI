datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Image {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  imagePath        String?
  metadata         Json?
  analysisResults  AnalysisResult[] @relation(name: "AnalysisResultsOnImage")
  user             User?            @relation(fields: [userId], references: [id])
  userId           String?          @db.ObjectId
  analysisResult   AnalysisResult?  @relation(name: "AnalysisResultOnImages", fields: [analysisResultId], references: [id])
  analysisResultId String?          @db.ObjectId
}

model AnalysisResult {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  result        Json?
  image         Image?         @relation(name: "AnalysisResultsOnImage", fields: [imageId], references: [id])
  imageId       String?        @db.ObjectId
  user          User?          @relation(fields: [userId], references: [id])
  userId        String?        @db.ObjectId
  consultations Consultation[]
  images        Image[]        @relation(name: "AnalysisResultOnImages")
}

model Report {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   Json?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  message   String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  firstName       String?
  lastName        String?
  username        String           @unique
  email           String?          @unique
  password        String
  roles           Json
  age             Int?
  gender          String?
  name            String?
  skinType        String?
  analysisResults AnalysisResult[]
  notifications   Notification[]
  reports         Report[]
  consultations   Consultation[]
  images          Image[]
}

model Consultation {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  date             DateTime?
  description      String?
  user             User?           @relation(fields: [userId], references: [id])
  userId           String?         @db.ObjectId
  analysisResult   AnalysisResult? @relation(fields: [analysisResultId], references: [id])
  analysisResultId String?         @db.ObjectId
}
