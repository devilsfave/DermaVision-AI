/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { AnalysisResultCreateNestedManyWithoutUsersInput } from "./AnalysisResultCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { NotificationCreateNestedManyWithoutUsersInput } from "./NotificationCreateNestedManyWithoutUsersInput";
import { ReportCreateNestedManyWithoutUsersInput } from "./ReportCreateNestedManyWithoutUsersInput";
import { ConsultationCreateNestedManyWithoutUsersInput } from "./ConsultationCreateNestedManyWithoutUsersInput";
import { ImageCreateNestedManyWithoutUsersInput } from "./ImageCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  age?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  gender?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  skinType?: string | null;

  @ApiProperty({
    required: false,
    type: () => AnalysisResultCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AnalysisResultCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AnalysisResultCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  analysisResults?: AnalysisResultCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => NotificationCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  notifications?: NotificationCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ReportCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ReportCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ReportCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  reports?: ReportCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ConsultationCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ConsultationCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ConsultationCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  consultations?: ConsultationCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ImageCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ImageCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ImageCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  images?: ImageCreateNestedManyWithoutUsersInput;
}

export { UserCreateInput as UserCreateInput };
