/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { AnalysisResultUpdateManyWithoutUsersInput } from "./AnalysisResultUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { NotificationUpdateManyWithoutUsersInput } from "./NotificationUpdateManyWithoutUsersInput";
import { ReportUpdateManyWithoutUsersInput } from "./ReportUpdateManyWithoutUsersInput";
import { ConsultationUpdateManyWithoutUsersInput } from "./ConsultationUpdateManyWithoutUsersInput";
import { ImageUpdateManyWithoutUsersInput } from "./ImageUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  age?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  gender?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  skinType?: string | null;

  @ApiProperty({
    required: false,
    type: () => AnalysisResultUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AnalysisResultUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AnalysisResultUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  analysisResults?: AnalysisResultUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ReportUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ReportUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ReportUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  reports?: ReportUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ConsultationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ConsultationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ConsultationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  consultations?: ConsultationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ImageUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ImageUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ImageUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  images?: ImageUpdateManyWithoutUsersInput;
}

export { UserUpdateInput as UserUpdateInput };
