/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Consultations as PrismaConsultations } from "@prisma/client";

export class ConsultationsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ConsultationsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.consultations.count(args);
  }

  async consultationsItems(
    args: Prisma.ConsultationsFindManyArgs
  ): Promise<PrismaConsultations[]> {
    return this.prisma.consultations.findMany(args);
  }
  async consultations(
    args: Prisma.ConsultationsFindUniqueArgs
  ): Promise<PrismaConsultations | null> {
    return this.prisma.consultations.findUnique(args);
  }
  async createConsultations(
    args: Prisma.ConsultationsCreateArgs
  ): Promise<PrismaConsultations> {
    return this.prisma.consultations.create(args);
  }
  async updateConsultations(
    args: Prisma.ConsultationsUpdateArgs
  ): Promise<PrismaConsultations> {
    return this.prisma.consultations.update(args);
  }
  async deleteConsultations(
    args: Prisma.ConsultationsDeleteArgs
  ): Promise<PrismaConsultations> {
    return this.prisma.consultations.delete(args);
  }
}
