/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HomeRemedies as PrismaHomeRemedies } from "@prisma/client";

export class HomeRemediesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HomeRemediesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.homeRemedies.count(args);
  }

  async homeRemediesItems(
    args: Prisma.HomeRemediesFindManyArgs
  ): Promise<PrismaHomeRemedies[]> {
    return this.prisma.homeRemedies.findMany(args);
  }
  async homeRemedies(
    args: Prisma.HomeRemediesFindUniqueArgs
  ): Promise<PrismaHomeRemedies | null> {
    return this.prisma.homeRemedies.findUnique(args);
  }
  async createHomeRemedies(
    args: Prisma.HomeRemediesCreateArgs
  ): Promise<PrismaHomeRemedies> {
    return this.prisma.homeRemedies.create(args);
  }
  async updateHomeRemedies(
    args: Prisma.HomeRemediesUpdateArgs
  ): Promise<PrismaHomeRemedies> {
    return this.prisma.homeRemedies.update(args);
  }
  async deleteHomeRemedies(
    args: Prisma.HomeRemediesDeleteArgs
  ): Promise<PrismaHomeRemedies> {
    return this.prisma.homeRemedies.delete(args);
  }
}
