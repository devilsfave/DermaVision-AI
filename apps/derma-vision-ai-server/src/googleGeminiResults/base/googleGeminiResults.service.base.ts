/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  GoogleGeminiResults as PrismaGoogleGeminiResults,
  Images as PrismaImages,
} from "@prisma/client";

export class GoogleGeminiResultsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GoogleGeminiResultsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.googleGeminiResults.count(args);
  }

  async googleGeminiResultsItems(
    args: Prisma.GoogleGeminiResultsFindManyArgs
  ): Promise<PrismaGoogleGeminiResults[]> {
    return this.prisma.googleGeminiResults.findMany(args);
  }
  async googleGeminiResults(
    args: Prisma.GoogleGeminiResultsFindUniqueArgs
  ): Promise<PrismaGoogleGeminiResults | null> {
    return this.prisma.googleGeminiResults.findUnique(args);
  }
  async createGoogleGeminiResults(
    args: Prisma.GoogleGeminiResultsCreateArgs
  ): Promise<PrismaGoogleGeminiResults> {
    return this.prisma.googleGeminiResults.create(args);
  }
  async updateGoogleGeminiResults(
    args: Prisma.GoogleGeminiResultsUpdateArgs
  ): Promise<PrismaGoogleGeminiResults> {
    return this.prisma.googleGeminiResults.update(args);
  }
  async deleteGoogleGeminiResults(
    args: Prisma.GoogleGeminiResultsDeleteArgs
  ): Promise<PrismaGoogleGeminiResults> {
    return this.prisma.googleGeminiResults.delete(args);
  }

  async getImage(parentId: string): Promise<PrismaImages | null> {
    return this.prisma.googleGeminiResults
      .findUnique({
        where: { id: parentId },
      })
      .image();
  }
}
